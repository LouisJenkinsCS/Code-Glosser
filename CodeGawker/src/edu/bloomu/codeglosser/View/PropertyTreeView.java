/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.bloomu.codeglosser.View;

import edu.bloomu.codeglosser.Model.TreeViewBranch;
import io.reactivex.Observable;
import java.io.File;
import java.io.IOException;
import java.nio.file.DirectoryStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.function.Consumer;
import java.util.logging.Logger;
import javax.swing.JTree;
import edu.bloomu.codeglosser.Model.TreeViewLeaf;
import edu.bloomu.codeglosser.Model.TreeViewNode;
import io.reactivex.subjects.PublishSubject;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreePath;
import org.openide.util.Exceptions;

/**
 * 
 * Displays a heirarchy of views, with B as the branch type, and L as the Leaf.
 * Both should implement a 'toString' method that correctly shows the representation
 * of that object type as a String.
 * 
 * @author Louis
 * @param <B> Branch type
 * @param <L> Leaf type
 */
public class PropertyTreeView extends javax.swing.JPanel implements ObservableProperty<TreeViewLeaf> {

    private static final Logger LOG = Logger.getLogger(PropertyTreeView.class.getName());
    
    private final PublishSubject<TreeViewLeaf> onLeafSelected = PublishSubject.create();
    
    /**
     * Creates new form ProjectFileViewer
     */
    public PropertyTreeView() {
        initComponents();
        
        // Setup double click listener (and observer)
        MouseListener doubleClickListener = new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int selRow = propertyTree.getRowForLocation(e.getX(), e.getY());
                TreePath selPath = propertyTree.getPathForLocation(e.getX(), e.getY());
                if(selRow != -1) {
                    if (e.getClickCount() == 2) {
                        TreeViewLeaf selectedLeaf = (TreeViewLeaf) ((DefaultMutableTreeNode)selPath.getLastPathComponent()).getUserObject();
                        onLeafSelected.onNext(selectedLeaf);
                    }
                }
            }
        };
        propertyTree.addMouseListener(doubleClickListener);
    }
    
    public void setRoot(TreeViewBranch root) {
        DefaultMutableTreeNode rootNode = new DefaultMutableTreeNode(root);
        try {
            populateTree(root, rootNode);
        } catch (IOException ex) {
            Exceptions.printStackTrace(ex);
        }
        DefaultTreeModel model = (DefaultTreeModel) propertyTree.getModel();
        model.setRoot(rootNode);
    }
    
    private void populateTree(TreeViewBranch branch, DefaultMutableTreeNode root) throws IOException {
        for (TreeViewNode v : branch.getChildren()) {
            DefaultMutableTreeNode n = new DefaultMutableTreeNode(v);
            root.add(n);
            
            if (v instanceof TreeViewBranch) {
                populateTree((TreeViewBranch) v, n);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        propertyTree = new javax.swing.JTree();

        jScrollPane1.setViewportView(propertyTree);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree propertyTree;
    // End of variables declaration//GEN-END:variables

    @Override
    public Observable<TreeViewLeaf> observe() {
        return onLeafSelected;
    }
}
