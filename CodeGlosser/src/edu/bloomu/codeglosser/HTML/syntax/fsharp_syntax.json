{
    "LANG_NAME": "F#",
    "COMMENT_SINGLE": {
        "1": "\/\/",
        "2": "#"
    },
    "COMMENT_MULTI": {
        "\/*": "*\/"
    },
    "COMMENT_REGEXP": {
        "3": "\/\\(\\*(?!\\)).*?\\*\\)\/s"
    },
    "CASE_KEYWORDS": 0,
    "QUOTEMARKS": [
        "'",
        "\""
    ],
    "HARDQUOTE": [
        "@\"",
        "\""
    ],
    "HARDESCAPE": [
        "\""
    ],
    "HARDCHAR": "\"",
    "ESCAPE_CHAR": "\\",
    "KEYWORDS": {
        "1": [
            "abstract",
            "and",
            "as",
            "assert",
            "base",
            "begin",
            "class",
            "default",
            "delegate",
            "do",
            "done",
            "downcast",
            "downto",
            "elif",
            "else",
            "end",
            "exception",
            "extern",
            "false",
            "finally",
            "for",
            "fun",
            "function",
            "if",
            "in",
            "inherit",
            "inline",
            "interface",
            "internal",
            "lazy",
            "let",
            "match",
            "member",
            "module",
            "mutable",
            "namespace",
            "new",
            "not",
            "null",
            "of",
            "open",
            "or",
            "override",
            "private",
            "public",
            "rec",
            "return",
            "sig",
            "static",
            "struct",
            "then",
            "to",
            "true",
            "try",
            "type",
            "upcast",
            "use",
            "val",
            "void",
            "when",
            "while",
            "with",
            "yield",
            "asr",
            "land",
            "lor",
            "lsl",
            "lsr",
            "lxor",
            "mod",
            "atomic",
            "break",
            "checked",
            "component",
            "const",
            "constraint",
            "constructor",
            "continue",
            "eager",
            "fixed",
            "fori",
            "functor",
            "global",
            "include",
            "method",
            "mixin",
            "object",
            "parallel",
            "params",
            "process",
            "protected",
            "pure",
            "sealed",
            "tailcall",
            "trait",
            "virtual",
            "volatile",
            "let!",
            "yield!"
        ],
        "2": [
            "Array",
            "Array2D",
            "Array3D",
            "Array4D",
            "ComparisonIdentity",
            "HashIdentity",
            "List",
            "Map",
            "Seq",
            "SequenceExpressionHelpers",
            "Set",
            "CommonExtensions",
            "Event",
            "ExtraTopLevelOperators",
            "LanguagePrimitives",
            "NumericLiterals",
            "Operators",
            "OptimizedClosures",
            "Option",
            "String",
            "NativePtr",
            "Printf"
        ],
        "3": [
            "abs",
            "acos",
            "asin",
            "atan",
            "atan2",
            "ceil",
            "cos",
            "cosh",
            "exp",
            "floor",
            "log",
            "log10",
            "pown",
            "round",
            "sign",
            "sin",
            "sinh",
            "sqrt",
            "tan",
            "tanh",
            "ignore",
            "fst",
            "snd",
            "stdin",
            "stdout",
            "stderr",
            "KeyValue",
            "max",
            "min"
        ],
        "4": [
            "bool",
            "byref",
            "byte",
            "char",
            "decimal",
            "double",
            "exn",
            "float",
            "float32",
            "FuncConvert",
            "ilsigptr",
            "int",
            "int16",
            "int32",
            "int64",
            "int8",
            "nativeint",
            "nativeptr",
            "obj",
            "option",
            "ref",
            "sbyte",
            "single",
            "string",
            "uint16",
            "uint32",
            "uint64",
            "uint8",
            "unativeint",
            "unit",
            "enum",
            "async",
            "seq",
            "dict"
        ],
        "5": [
            "failwith",
            "invalidArg",
            "raise",
            "rethrow"
        ],
        "6": [
            "(*IF-FSHARP",
            "ENDIF-FSHARP*)",
            "(*F#",
            "F#*)",
            "(*IF-OCAML",
            "ENDIF-OCAML*)",
            "#light",
            "#if",
            "#else",
            "#endif",
            "#indent",
            "#nowarn",
            "#r",
            "#reference",
            "#I",
            "#Include",
            "#load",
            "#time",
            "#help",
            "#q",
            "#quit"
        ],
        "7": [
            "__SOURCE_DIRECTORY__",
            "__SOURCE_FILE__",
            "__LINE__"
        ],
        "8": [
            "box",
            "hash",
            "sizeof",
            "typeof",
            "typedefof",
            "unbox"
        ]
    },
    "SYMBOLS": {
        "1": [
            "+",
            "-",
            "\/",
            "*",
            "**",
            "%",
            "~-"
        ],
        "2": [
            "<",
            "<=",
            ">",
            "<=",
            "=",
            "<>"
        ],
        "3": [
            "<<<",
            ">>>",
            "^^^",
            "&&&",
            "|||",
            "~~~"
        ],
        "4": [
            "|>",
            ">>",
            "<|",
            "<<"
        ],
        "5": [
            "!",
            "->",
            "->>"
        ],
        "6": [
            "[",
            "]",
            "(",
            ")",
            "{",
            "}",
            "[|",
            "|]",
            "(|",
            "|)"
        ],
        "7": [
            ":=",
            ";",
            ";;"
        ]
    },
    "CASE_SENSITIVE": [
        false,
        true,
        true,
        true,
        true,
        true,
        true,
        true,
        true
    ],
    "STYLES": {
        "KEYWORDS": {
            "1": "color: #06c; font-weight: bold;",
            "2": "color: #06c; font-weight: bold;",
            "3": "color: #06c; font-weight: bold;",
            "4": "color: #06c; font-weight: bold;",
            "5": "color: #06c; font-weight: bold;",
            "6": "color: #06c; font-weight: bold;",
            "7": "color: #06c; font-weight: bold;",
            "8": "color: #06c; font-weight: bold;"
        },
        "COMMENTS": {
            "MULTI": "color: #5d478b; font-style: italic;",
            "1": "color: #5d478b; font-style: italic;",
            "2": "color: #5d478b; font-style: italic;",
            "3": "color: #5d478b; font-style: italic;"
        },
        "ESCAPE_CHAR": [],
        "BRACKETS": [
            "color: #6c6;"
        ],
        "STRINGS": [
            "color: #3cb371;"
        ],
        "NUMBERS": [
            "color: #c6c;"
        ],
        "METHODS": {
            "1": "color: #060;"
        },
        "REGEXPS": [],
        "SYMBOLS": [
            "color: #a52a2a;"
        ],
        "SCRIPT": []
    },
    "URLS": {
        "1": "",
        "2": "http:\/\/research.microsoft.com\/en-us\/um\/cambridge\/projects\/fsharp\/manual\/namespaces.html",
        "3": "",
        "4": "",
        "5": "",
        "6": "",
        "7": "",
        "8": ""
    },
    "OOLANG": true,
    "OBJECT_SPLITTERS": {
        "1": "."
    },
    "REGEXPS": [],
    "STRICT_MODE_APPLIES": 0,
    "SCRIPT_DELIMITERS": [],
    "HIGHLIGHT_STRICT_BLOCK": [],
    "TAB_WIDTH": 4,
    "PARSER_CONTROL": {
        "KEYWORDS": {
            "DISALLOWED_BEFORE": "(?<![a-zA-Z0-9$_\\|\\#>|^])",
            "DISALLOWED_AFTER": "(?![a-zA-Z0-9_<\\|%\\-])"
        }
    }
}