{
    "LANG_NAME": "VHDL",
    "COMMENT_SINGLE": {
        "1": "--"
    },
    "COMMENT_MULTI": {
        "\/*": "*\/"
    },
    "COMMENT_REGEXP": {
        "1": "\/(?<=\\s)#(?:\\\\\\\\|\\\\\\n|.)*$\/m",
        "2": "\/--\\s*@?psl(?:.)*?;$\/m"
    },
    "CASE_KEYWORDS": 0,
    "QUOTEMARKS": [
        "\""
    ],
    "ESCAPE_CHAR": "",
    "KEYWORDS": {
        "1": [
            "access",
            "after",
            "alias",
            "all",
            "attribute",
            "architecture",
            "array",
            "begin",
            "block",
            "body",
            "buffer",
            "bus",
            "case",
            "case?",
            "component",
            "configuration",
            "constant",
            "context",
            "disconnect",
            "downto",
            "else",
            "elsif",
            "end",
            "entity",
            "exit",
            "file",
            "for",
            "force",
            "function",
            "generate",
            "generic",
            "group",
            "guarded",
            "if",
            "impure",
            "in",
            "inertial",
            "inout",
            "is",
            "label",
            "library",
            "linkage",
            "literal",
            "loop",
            "map",
            "new",
            "next",
            "null",
            "of",
            "on",
            "open",
            "others",
            "out",
            "package",
            "port",
            "postponed",
            "procedure",
            "process",
            "protected",
            "pure",
            "range",
            "record",
            "register",
            "reject",
            "release",
            "report",
            "return",
            "select",
            "severity",
            "shared",
            "signal",
            "subtype",
            "then",
            "to",
            "transport",
            "type",
            "unaffected",
            "units",
            "until",
            "use",
            "variable",
            "wait",
            "when",
            "while",
            "with"
        ],
        "2": [
            "bit",
            "bit_vector",
            "character",
            "boolean",
            "integer",
            "real",
            "time",
            "delay_length",
            "string",
            "severity_level",
            "positive",
            "natural",
            "signed",
            "unsigned",
            "line",
            "text",
            "std_logic",
            "std_logic_vector",
            "std_ulogic",
            "std_ulogic_vector",
            "sfixed",
            "ufixed",
            "float",
            "float32",
            "float64",
            "float128",
            "work",
            "ieee",
            "std_logic_1164",
            "math_real",
            "math_complex",
            "textio",
            "numeric_std",
            "numeric_std_signed",
            "numeric_std_unsigned",
            "numeric_bit"
        ],
        "3": [
            "abs",
            "and",
            "mod",
            "nor",
            "not",
            "or",
            "rem",
            "rol",
            "ror",
            "sla",
            "sll",
            "sra",
            "srl",
            "xnor",
            "xor"
        ],
        "4": [
            "assert",
            "assume",
            "assume_guarantee",
            "clock",
            "const",
            "countones",
            "cover",
            "default",
            "endpoint",
            "fairness",
            "fell",
            "forall",
            "inf",
            "inherit",
            "isunknown",
            "onehot",
            "onehot0",
            "property",
            "prev",
            "restrict",
            "restrict_guarantee",
            "rose",
            "sequence",
            "stable",
            "strong",
            "union",
            "vmode",
            "vprop",
            "vunit"
        ],
        "5": [
            "abort",
            "always",
            "before",
            "before!",
            "before!_",
            "before_",
            "eventually!",
            "never",
            "next!",
            "next_a",
            "next_a!",
            "next_e",
            "next_e!",
            "next_event",
            "next_event!",
            "next_event_a",
            "next_event_a!",
            "next_event_e",
            "next_event_e!",
            "until!",
            "until!_",
            "until_",
            "within"
        ]
    },
    "SYMBOLS": [
        "[",
        "]",
        "(",
        ")",
        ";",
        ":",
        "<",
        ">",
        "=",
        "+",
        "-",
        "*",
        "\/",
        "&",
        "|",
        "?"
    ],
    "CASE_SENSITIVE": [
        false,
        false,
        false,
        false,
        false,
        false
    ],
    "STYLES": {
        "KEYWORDS": {
            "1": "color: #000080; font-weight: bold;",
            "2": "color: #0000ff;",
            "3": "color: #000066;",
            "4": "color: #000080; font-weight: bold;",
            "5": "color: #000066;"
        },
        "COMMENTS": {
            "1": "color: #008000; font-style: italic;",
            "2": "color: #ff0000; font-weight: bold;",
            "MULTI": "color: #008000; font-style: italic;"
        },
        "ESCAPE_CHAR": [
            "color: #000099; font-weight: bold;"
        ],
        "BRACKETS": [
            "color: #000066;"
        ],
        "STRINGS": [
            "color: #7f007f;"
        ],
        "NUMBERS": [
            "color: #ff0000;"
        ],
        "METHODS": [],
        "SYMBOLS": [
            "color: #000066;"
        ],
        "REGEXPS": {
            "0": "color: #ff0000;",
            "2": "color: #ee82ee;"
        },
        "SCRIPT": []
    },
    "URLS": {
        "1": "",
        "2": "",
        "3": "",
        "4": "",
        "5": ""
    },
    "OOLANG": false,
    "OBJECT_SPLITTERS": [],
    "REGEXPS": {
        "0": "(\\b\\d+#[[:xdigit:]_]+#)|(\\b[\\d_]+(\\.[\\d_]+)?[eE][+\\-]?[\\d_]+)|(\\b(hr|min|sec|ms|us|ns|ps|fs)\\b)",
        "2": "'\\w+(?!')"
    },
    "STRICT_MODE_APPLIES": 0,
    "SCRIPT_DELIMITERS": [],
    "HIGHLIGHT_STRICT_BLOCK": []
}