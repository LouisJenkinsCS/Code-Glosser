/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.bloomu.codeglosser.View;

import edu.bloomu.codeglosser.Model.Markup;
import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author Louis
 */
public class PropertyTextArea extends javax.swing.JPanel implements ObservableProperty<String> {
    
    PublishSubject<String> textChange = PublishSubject.create();
    private Markup note;
    
    /**
     * Creates new form PropertyTextArea
     */
    public PropertyTextArea() {
        initComponents();
        noteMsg.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                textChange.onNext(noteMsg.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                textChange.onNext(noteMsg.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                textChange.onNext(noteMsg.getText());
            }
            
        });
    }
    
    public void setMessage(String note) {
        this.noteMsg.setText(note);
    }
    
    
    public void setLabelName(String note) {
        this.textLabel.setText(note);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        noteMsg = new javax.swing.JTextArea();
        textLabel = new javax.swing.JLabel();

        noteMsg.setColumns(20);
        noteMsg.setLineWrap(true);
        noteMsg.setRows(5);
        noteMsg.setText(org.openide.util.NbBundle.getMessage(PropertyTextArea.class, "PropertyTextArea.noteMsg.text")); // NOI18N
        noteMsg.setToolTipText(org.openide.util.NbBundle.getMessage(PropertyTextArea.class, "PropertyTextArea.noteMsg.toolTipText")); // NOI18N
        noteMsg.setWrapStyleWord(true);
        jScrollPane1.setViewportView(noteMsg);

        textLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(textLabel, org.openide.util.NbBundle.getMessage(PropertyTextArea.class, "PropertyTextArea.textLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(textLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea noteMsg;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public Observable<String> observe() {
        return textChange;
    }
}
