/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.bloomu.codeglosser.View;

import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;


/**
 *
 * @author Louis
 * 
 * Property panel that respects user's updates and will automatically send
 * updates to the backing model via it's observable.
 */
public class PropertyPanel extends javax.swing.JPanel implements ObservableProperty<String> {
    
    private PublishSubject<String> textChange = PublishSubject.create();
    
    /**
     * Creates new form PropertyPanel
     */
    public PropertyPanel() {
        initComponents();
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                textChange.onNext(textField.getText());
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                textChange.onNext(textField.getText());
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                textChange.onNext(textField.getText());
            }
        });
    }
    
    public void setLabelText(String text) {
        textLabel.setText(text);
    }
    
    public void setFieldText(String text) {
        textField.setText(text);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField = new javax.swing.JTextField();
        textLabel = new javax.swing.JLabel();

        textField.setHorizontalAlignment(javax.swing.JTextField.LEFT);

        textLabel.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(textLabel, org.openide.util.NbBundle.getMessage(PropertyPanel.class, "PropertyPanel.textLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textField, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField textField;
    private javax.swing.JLabel textLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public Observable<String> observe() {
        return textChange;
    }
}
