/* BSD 3-Clause License
 *
 * Copyright (c) 2017, Louis Jenkins <LouisJenkinsCS@hotmail.com>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 *     - Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     - Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *
 *     - Neither the name of Louis Jenkins, Bloomsburg University nor the names of its 
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
package edu.bloomu.codeglosser.View;

import edu.bloomu.codeglosser.Model.Markup;
import io.reactivex.Observable;
import io.reactivex.subjects.PublishSubject;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JComboBox;

/**
 *
 * @author Louis
 */
public class PropertySelector extends javax.swing.JPanel {
    
    private PublishSubject<Markup> onNoteSelection = PublishSubject.create();
    private static final Logger LOG = Logger.getLogger(PropertySelector.class.getName());
    
    // Kept track of to prevent invoking 'setSelectedItem' and triggering the ActionListener (which would cause an infinite loop)
    private Markup currentNote;
    
    
    /**
     * Creates new form propertyNoteName
     */
    public PropertySelector() {
        initComponents();
        clear();
        noteSelector.addActionListener(e -> {
            JComboBox<Markup> src = (JComboBox<Markup>) e.getSource();
            Markup n = (Markup) src.getSelectedItem();
            if (n != null) {
                currentNote = n;
                onNoteSelection.onNext(n);
            }
        });
    }
    
    public void update(Markup... notes) {
        Markup n = currentNote;
        clear();
        Stream.of(notes).forEach(noteSelector::addItem);
        if (!Stream.of(notes).anyMatch(n::equals)) {
            noteSelector.setSelectedItem(Markup.DEFAULT);
        }
    }
    
    public void clear() {
        noteSelector.removeAllItems();
        currentNote = Markup.DEFAULT;
        noteSelector.addItem(currentNote);
    }
    
    public void setSelectedNote(Markup n) {
        if (n != currentNote)
            noteSelector.setSelectedItem(n);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        noteSelector = new javax.swing.JComboBox<>();

        noteSelector.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noteSelector, javax.swing.GroupLayout.Alignment.TRAILING, 0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(noteSelector)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<edu.bloomu.codeglosser.Model.Markup> noteSelector;
    // End of variables declaration//GEN-END:variables
}
